
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.admin == true;
    }

    // Users can be read by anyone, but only created by the user themselves.
    // Updates are restricted to the user. Admins can do anything.
    match /users/{userId} {
      allow read;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();
    }

    // Admins collection can be read by any authenticated user to verify status,
    // but only existing admins can write to it (promote new admins).
    match /admins/{userId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // Projects can be read by anyone. Write access is for admins only.
    match /projects/{projectId} {
      allow read;
      allow write: if isAdmin();
    }

    // Inquiries can be read and written only by admins.
    match /inquiries/{inquiryId} {
      allow read, write: if isAdmin();
      allow create;
    }
    
    // Carts and Purchases are private to the user.
    match /carts/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
    
    match /purchases/{userId} {
       allow read, write: if request.auth.uid == userId;
    }
  }
}
