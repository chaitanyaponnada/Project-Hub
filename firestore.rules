
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Allow logged-in users to read projects and categories
    match /projects/{projectId} {
      allow read: if request.auth != null;
      allow write: if isAdmin(); // Only admins can create, update, delete projects
    }

    // Users can read and write to their own cart and purchase history
    match /carts/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    match /purchases/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Logged in users can create inquiries
    match /inquiries/{inquiryId} {
      allow create: if request.auth != null;
      allow read, list: if isAdmin() || request.auth.uid == request.resource.data.userId; // Admins or the user who created it
    }
    
    // Sales data is write-only for users (via batch writes) and read-only for admins
    match /sales/{saleId} {
      allow create: if request.auth != null;
      allow read, list: if isAdmin();
    }

    // Users can read their own user document, admins can read any
    match /users/{userId} {
      allow get: if request.auth.uid == userId || isAdmin();
      allow list: if isAdmin();
      // Only allow user creation through the app logic which sets isAdmin=false
      allow create: if request.resource.data.isAdmin == false;
      allow update: if request.auth.uid == userId;
    }
  }
}
