
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Projects: Publicly readable, only admins can write
    match /projects/{projectId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users: Users can create their own doc, and only update/delete their own. Admins can do anything.
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
    }
    
    // Inquiries: Anyone can create, only admins can read/delete
    match /inquiries/{inquiryId} {
      allow create: if true;
      allow read, delete: if isAdmin();
    }

    // Carts: Users can only read/write their own cart. Admins can read them.
    match /carts/{userId} {
      allow read, write: if request.auth.uid == userId;
      allow get: if request.auth.uid == userId || isAdmin();
    }
    
    // Purchases: Users can only read/write their own purchase history. Admins can read them.
    match /purchases/{userId} {
       allow read, write: if request.auth.uid == userId;
       allow get: if request.auth.uid == userId || isAdmin();
    }

    // Admins: Only other admins can read/write the admins list
    match /admins/{adminId} {
      allow read, write: if isAdmin();
    }
  }
}
