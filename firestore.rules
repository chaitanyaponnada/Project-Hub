
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Projects: Publicly readable, only writable by admins
    match /projects/{projectId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users: Can only be created during signup. Users can read/update their own data. Admins can read/write any user data.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid != null;
      allow delete: if isAdmin();
    }
    
    // Carts & Purchases: Users can only access their own cart and purchase history. Admins have full access.
    match /carts/{userId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
    }
    match /purchases/{userId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
    }

    // Inquiries: Allow anyone to create (for the contact form), but only admins to read/delete.
    match /inquiries/{inquiryId} {
      allow create: if true;
      allow read, delete: if isAdmin();
    }

    // Admins: Only readable by other admins to check roles. Not publicly writable.
    match /admins/{adminId} {
        allow read: if isAdmin();
        // Writes should be done server-side or via the Firebase Console for security
        allow write: if false; 
    }
  }
}
