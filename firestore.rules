
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Projects: Public can read, only admins can write
    match /projects/{projectId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users: Users can read/write their own data, admins can read any
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow create: if true; 
      allow write: if request.auth.uid == userId;
    }

    // Carts: Users can only access their own cart
    match /carts/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Inquiries: Anyone can create, only admins can read
    match /inquiries/{inquiryId} {
      allow create: if true;
      allow read, write, delete: if isAdmin();
    }
    
    // Reviews: Public read, admin write
    match /reviews/{reviewId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Sales: Users can create their own sales records and read them. Admins can read all.
    match /sales/{saleId} {
      allow create: if request.auth != null;
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow update, delete: if isAdmin();
    }
  }
}
