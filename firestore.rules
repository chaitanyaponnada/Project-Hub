
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Users can read their own user document
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Admins can read all user documents
    match /users/{userId} {
      allow list: if isAdmin();
    }
    
    // Admins have full access to the admins collection
    match /admins/{adminId} {
        allow read, write: if isAdmin();
    }

    // Carts are private to each user
    match /carts/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Purchases are private to each user
    match /purchases/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Authenticated users can read projects
    match /projects/{projectId} {
      allow read: if request.auth.uid != null;
    }
    
    // Admins can create, update, and delete projects
    match /projects/{projectId} {
        allow write, delete: if isAdmin();
    }

    // Inquiries can be created by anyone (for the contact form)
    match /inquiries/{inquiryId} {
      allow create: if true;
    }

    // Admins can read and delete inquiries
    match /inquiries/{inquiryId} {
        allow list, delete: if isAdmin();
    }
  }
}
