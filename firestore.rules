
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // USERS: Users can see their own profile. Admins can see all.
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId);
      allow create: if request.auth != null;
    }
    
    // PROJECTS: Publicly readable, but only admins can modify.
    match /projects/{projectId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // REVIEWS: Publicly readable, admin write.
    match /reviews/{reviewId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // CARTS: Users can only manage their own cart.
    match /carts/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // SALES: Users can read their own purchase history. Admins can read all for analytics.
    match /sales/{saleId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if request.auth != null; // Anyone can create a sale during checkout
      allow update, delete: if isAdmin();
    }

    // INQUIRIES: 
    // - Anyone can create an inquiry (contact form).
    // - Users can read their own inquiries.
    // - Admins can read all inquiries.
    match /inquiries/{inquiryId} {
        allow create: if true;
        allow read: if (isOwner(resource.data.userId) && resource.data.userId != null) || isAdmin();
        allow list: if (request.query.where.userId == request.auth.uid) || isAdmin();
        allow update, delete: if isAdmin();
    }
  }
}
