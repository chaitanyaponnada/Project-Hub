
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Projects can be read by anyone, but only written by admins.
    match /projects/{projectId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users can only read/write their own document, admins can read/write any.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }
    
    // Carts are private to each user.
    match /carts/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Sales can be created by any authenticated user, but only read by the user who made the purchase or an admin.
    match /sales/{saleId} {
      allow create: if request.auth != null;
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow update, delete: if isAdmin();
    }
    
    // Inquiries can be created by anyone, but only read by admins or the user who created it.
    match /inquiries/{inquiryId} {
      allow create: if true;
      allow read: if (request.auth != null && request.auth.uid == resource.data.userId) || isAdmin();
      allow update, delete: if isAdmin();
    }
    
    match /reviews/{reviewId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
  }
}
