
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) && get(/databases/$(database)/documents/users/$(userId)).data.isAdmin == true;
    }

    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin(request.auth.uid));
      allow create: if request.auth != null;
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin(request.auth.uid));
      allow delete: if isAdmin(request.auth.uid);
    }
    
    match /projects/{projectId} {
      allow read;
      allow create, update, delete: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    match /reviews/{reviewId} {
      allow read;
      allow create, update, delete: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    match /carts/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /sales/{saleId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || isAdmin(request.auth.uid));
      allow update, delete: if isAdmin(request.auth.uid);
    }

    match /inquiries/{inquiryId} {
      allow create; // Anyone can submit an inquiry
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || isAdmin(request.auth.uid));
      allow update, delete: if isAdmin(request.auth.uid);
    }
  }
}
