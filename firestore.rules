
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can be read by anyone, but only the user themselves can create their own document.
    // Admin status can only be changed by an existing admin.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Projects can be read by anyone.
    // Only admins can create, update, or delete projects.
    match /projects/{projectId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Carts can only be read and written by the owner.
    match /carts/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Purchases can only be read by the owner.
    match /purchases/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Inquiries can be created by anyone.
    // They can be read and updated (replied to) by admins.
    // A user can read their own inquiries.
    match /inquiries/{inquiryId} {
       allow create: if request.auth != null;
       allow read, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
       allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}
