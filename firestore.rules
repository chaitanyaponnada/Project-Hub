rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // USERS:
    // - Authenticated users can read/write their own data.
    // - Admins can read/write any user's data.
    match /users/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }

    // PROJECTS:
    // - Anyone can read projects.
    // - Only admins can create, update, or delete projects.
    match /projects/{projectId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // REVIEWS:
    // - Anyone can read reviews.
    // - Only admins can create, update, or delete reviews.
    match /reviews/{reviewId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // CARTS:
    // - Users can only read and write to their own cart.
    match /carts/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // SALES:
    // - Users can read their own sales records (for purchase history).
    // - Admins can read all sales for analytics.
    // - Authenticated users can create new sales records (on checkout).
    match /sales/{saleId} {
      allow read: if isOwner(request.resource.data.userId) || isAdmin();
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
    }

    // INQUIRIES:
    // - Anyone can create an inquiry (for the contact form).
    // - Users can read their own inquiries.
    // - Admins can read all inquiries.
    match /inquiries/{inquiryId} {
      allow create: if true;
      allow read: if (request.auth != null && isOwner(resource.data.userId)) || isAdmin();
      allow update, delete: if isAdmin();
    }
  }
}
