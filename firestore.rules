
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // PROJECTS: Publicly readable, admin-only write access
    match /projects/{projectId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // USERS: Users can read/update their own data, admins can read all
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create, delete: if isAdmin(); // Only admins can create/delete user records directly
    }

    // CARTS: Users can only access their own cart
    match /carts/{userId} {
        allow read, write: if request.auth.uid == userId;
    }

    // SALES: Authenticated users can create sales (on checkout), admins can read all
    match /sales/{saleId} {
        allow create: if request.auth != null;
        allow read, update, delete: if isAdmin();
    }
    
    // INQUIRIES: Anyone can create, admins can read/delete
    match /inquiries/{inquiryId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }

    // REVIEWS: Publicly readable, admin-only write access
    match /reviews/{reviewId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }
  }
}
