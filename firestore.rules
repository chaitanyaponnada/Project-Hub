
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users Collection
    match /users/{userId} {
      // Admins can read any user profile
      allow get: if isAdmin();
      // Users can read their own profile
      allow get: if isOwner(userId);
      // Users can create their own profile (on signup)
      allow create: if isOwner(userId);
      // Users can update their own profile
      allow update: if isOwner(userId);
      // Admins can manage all user profiles
      allow list, write: if isAdmin();
    }
    
    // Projects Collection
    match /projects/{projectId} {
      // Anyone can view projects
      allow read: if true;
      // Only admins can create, update, or delete projects
      allow write: if isAdmin();
    }
    
    // Reviews Collection
    match /reviews/{reviewId} {
        // Anyone can read reviews
        allow read: if true;
        // Only admins can create, update, or delete reviews
        allow write: if isAdmin();
    }

    // Carts Collection
    match /carts/{userId} {
      // A user can only access their own cart
      allow read, write: if isOwner(userId);
    }
    
    // Sales Collection (Simulated purchases)
    match /sales/{saleId} {
      // A user can create a sale record for themselves upon checkout
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // A user can read their own sales history
      allow list: if request.auth != null && request.query.where[0][2] == request.auth.uid;
      // Admins can read all sales for analytics
      allow read, list: if isAdmin();
    }
    
    // Inquiries Collection
    match /inquiries/{inquiryId} {
      // Anyone can create an inquiry (submit the contact form)
      allow create: if true;
      // Users can read their own submitted inquiries
      allow list: if request.auth != null && request.query.where[0][2] == request.auth.uid;
      // Admins can read all inquiries
      allow read, list: if isAdmin();
      // Only Admins can delete inquiries
      allow delete: if isAdmin();
    }
    
    // Purchase Requests Collection
    match /purchaseRequests/{requestId} {
      // Authenticated users can create a purchase request
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Admins can read all purchase requests
      allow read, list: if isAdmin();
      // Admins can update the status of a request
      allow update: if isAdmin();
    }
  }
}
