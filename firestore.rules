
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/admins/$(userId));
    }

    // Projects: Public can read, only admins can write/delete
    match /projects/{projectId} {
      allow read: if true;
      allow write, delete: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Users: Users can create their own doc and update their own doc. No one else can read/write.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }
    
    // Admins: Only other admins can read this collection
    match /admins/{adminId} {
      allow read, write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Carts: Users can only read and write their own cart
    match /carts/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Purchases: Users can only read and write their own purchase history
    match /purchases/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Inquiries: Anyone can create (submit the form), only admins can read/delete
    match /inquiries/{inquiryId} {
      allow create: if true;
      allow read, delete: if request.auth != null && isAdmin(request.auth.uid);
    }
  }
}
