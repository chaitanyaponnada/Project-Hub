
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // USERS: 
    // - Any authenticated user can create their own user document.
    // - Any authenticated user can read any user document.
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null;
      allow write: if isAdmin(); // Only admins can update/delete user docs
    }

    // ADMINS: 
    // - Any authenticated user can create their own admin document.
    // - Any authenticated user can read the list of admins.
    match /admins/{adminId} {
      allow create: if request.auth != null && request.auth.uid == adminId;
      allow read: if request.auth != null;
      allow write: if isAdmin(); // Only existing admins can add/remove other admins
    }

    // PROJECTS: 
    // - Any authenticated user can read projects.
    // - Only admins can write (create, update, delete) projects.
    match /projects/{projectId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // CARTS, PURCHASES, INQUIRIES:
    // - Users can only read and write their own documents.
    match /carts/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /purchases/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /inquiries/{inquiryId} {
      allow create: if request.auth != null; // Any authenticated user can create an inquiry
      allow read, write, delete: if isAdmin(); // Only admins can manage inquiries
    }

  }
}
