rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is an admin
    function isAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Admins collection:
    // - Any authenticated user can check if a user is an admin (read).
    // - Only admins can modify the list of admins (write).
    match /admins/{userId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // Users collection:
    // - Admins can read and write to the users collection.
    // - A user can read their own document.
    match /users/{userId} {
      allow read: if isAdmin() || request.auth.uid == userId;
      allow write: if isAdmin();
    }

    // Inquiries collection:
    // - Admins can manage all inquiries.
    // - Users can create inquiries.
    match /inquiries/{inquiryId} {
        allow read, delete: if isAdmin();
        allow create: if request.auth != null;
    }
    
    // Projects collection:
    // - Any authenticated user can read projects.
    // - Only admins can write/delete projects.
    match /projects/{projectId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // Carts and Purchases collections:
    // - Users can only access their own cart and purchase history.
    match /carts/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
    match /purchases/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
  }
}
